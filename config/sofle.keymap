/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
 
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&left_encoder { steps = <40> /* Change this to your encoder's number of detents times 2 */; };

&right_encoder { steps = <40> /* Change this to your encoder's number of detents times 2 */; };

/ {
    macros {
        // System and Power

        tm: tm {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp ESC>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };

        slp: slp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp U &kp S>;
        };

        rst: rst {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp U &kp R>;
        };

        off: off {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp U &kp U>;
        };

        // Bluetooth

        ubt0: ubt0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_tap>,
                <&bt BT_SEL 0>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(240,100,20)>;
        };

        ubt1: ubt1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_tap>,
                <&bt BT_SEL 1>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(120,100,20)>;
        };

        ubt2: ubt2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_tap>,
                <&bt BT_SEL 2>,
                <&macro_tap>,
                <&rgb_ug RGB_COLOR_HSB(0,100,20)>;
        };

        // Various Macros

        teams_mute: teams_mute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_tap>,
                <&bt BT_SEL 1>,
                <&macro_wait_time 100>,
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp N3>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_wait_time 50>,
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp M>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };

        // Windows alt code Special Characters        

        smfada_a: smfada_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N5>,
                <&macro_release>,
                <&kp LALT>;
        };

        lfada_a: lfada_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        smumlaut_a: smumlaut_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;
        };

        lumlaut_a: lumlaut_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        smlat_ae: smlat_ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N0>,
                <&macro_release>,
                <&kp LALT>;
        };

        lglat_ae: lglat_ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;
        };

        smfada_e: smfada_e {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        lfada_e: lfada_e {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        smfada_i: smfada_i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N3 &kp KP_N7>,
                <&macro_release>,
                <&kp LALT>;
        };

        lfada_i: lfada_i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N5>,
                <&macro_release>,
                <&kp LALT>;
        };

        smfada_o: smfada_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        lfada_o: lfada_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        smumlaut_o: smumlaut_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        lumlaut_o: lumlaut_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };

        smfada_u: smfada_u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N0>,
                <&macro_release>,
                <&kp LALT>;
        };

        lfada_u: lfada_u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;
        };

        smumlaut_u: smumlaut_u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };

        lumlaut_u: lumlaut_u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N0>,
                <&macro_release>,
                <&kp LALT>;
        };

        smtil_n: smtil_n {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        ltil_n: ltil_n {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N0 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };

        essette_s: essette_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        //Unicode Special Characters
        //Need regkey HKEY_CURRENT_USER\Control Panel\Input Method, REG_SZ EnableHexNumpad = 1
        //Symbols

        euro: euro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N0 &kp A &kp C>,
                <&macro_release>,
                <&kp LALT>;
        };

        us_cent: us_cent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp A &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };

        uk_pnd: uk_pnd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp A &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        degree: degree {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp KP_N0>,
                <&macro_release>,
                <&kp LALT>;
        };

        inv_exc: inv_exc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp A &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        inv_ques: inv_ques {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp F>,
                <&macro_release>,
                <&kp LALT>;
        };

        plus_min: plus_min {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        //IPA

        schwa: schwa {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };

        //Diacritical Characters

        smogo_a: smogo_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N0 &kp KP_N5>,
                <&macro_release>,
                <&kp LALT>;
        };

        logo_a: logo_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N0 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };

        smogo_e: smogo_e {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N1 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };

        logo_e: logo_e {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N1 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;
        };

        smacute_c: smacute_c {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N0 &kp KP_N7>,
                <&macro_release>,
                <&kp LALT>;
        };

        lacute_c: lacute_c {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N0 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        smdark_l: smdark_l {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };

        ldark_l: ldark_l {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        smacute_n: smacute_n {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };

        lacute_n: lacute_n {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        smacute_s: smacute_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N5 &kp B>,
                <&macro_release>,
                <&kp LALT>;
        };

        lacute_s: lacute_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N5 &kp A>,
                <&macro_release>,
                <&kp LALT>;
        };

        smacute_z: smacute_z {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp A>,
                <&macro_release>,
                <&kp LALT>;
        };

        lacute_z: lacute_z {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };

        smdot_z: smdot_z {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp C>,
                <&macro_release>,
                <&kp LALT>;
        };

        ldot_z: ldot_z {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp B>,
                <&macro_release>,
                <&kp LALT>;
        };

        // Fractions

        one_half: one_half {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp D>,
                <&macro_release>,
                <&kp LALT>;
        };

        one_third: one_third {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        one_fourth: one_fourth {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp C>,
                <&macro_release>,
                <&kp LALT>;
        };

        one_eighth: one_eighth {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp B>,
                <&macro_release>,
                <&kp LALT>;
        };

        two_thirds: two_thirds {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };

        three_fourths: three_fourths {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp E>,
                <&macro_release>,
                <&kp LALT>;
        };

        three_eighths: three_eighths {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp C>,
                <&macro_release>,
                <&kp LALT>;
        };

        five_eighths: five_eighths {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp D>,
                <&macro_release>,
                <&kp LALT>;
        };

        seven_eighths: seven_eighths {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp E>,
                <&macro_release>,
                <&kp LALT>;
        };

        // Operators

        less_equ: less_equ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N2 &kp KP_N6 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };

        gtr_equ: gtr_equ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N2 &kp KP_N6 &kp KP_N5>,
                <&macro_release>,
                <&kp LALT>;
        };

        not_equ: not_equ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N2 &kp KP_N6 &kp KP_N0>,
                <&macro_release>,
                <&kp LALT>;
        };

        alm_equ: alm_equ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N2 &kp KP_N4 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;
        };

        dbl_left: dbl_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp A &kp B>,
                <&macro_release>,
                <&kp LALT>;
        };

        dbl_right: dbl_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp B>,
                <&macro_release>,
                <&kp LALT>;
        };
    };
};

//Combos, note that key listing is zero indexed
//lshift: 36
//rshift: 49

/ {
    combos {
        compatible = "zmk,combos";

        // Characters
        // Fractions
        // Operators
    };
};

// Mod Morphs, Encoder, Tap-Dances

/ {
    behaviors {
        // Mod Morph
        // RGB

        rgb_bri_sat_inc: rgb_bri_sat_inc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAI>, <&rgb_ug RGB_BRI>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        rgb_bri_sat_dec: rgb_bri_sat_dec {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAD>, <&rgb_ug RGB_BRD>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        rgb_inc: rgb_inc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_bri_sat_inc>;

            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
        };

        rgb_dec: rgb_dec {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUD>, <&rgb_bri_sat_dec>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // System Functions  

        ret_menu: ret_menu {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RET>, <&kp K_APPLICATION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Special Characters - Capitalizations

        fada_a: fada_a {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smfada_a>, <&lfada_a>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ogonek_a: ogonek_a {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smogo_a>, <&logo_a>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        umlaut_a: umlaut_a {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smumlaut_a>, <&lumlaut_a>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        fada_e: fada_e {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smfada_e>, <&lfada_e>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ogonek_e: ogonek_e {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smogo_e>, <&logo_e>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        fada_i: fada_i {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smfada_i>, <&lfada_i>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        fada_o: fada_o {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smfada_o>, <&lfada_o>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        umlaut_o: umlaut_o {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smumlaut_o>, <&lumlaut_o>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        fada_u: fada_u {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smfada_u>, <&lfada_u>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        umlaut_u: umlaut_u {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smumlaut_u>, <&lumlaut_u>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        acute_c: acute_c {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smacute_c>, <&lacute_c>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dark_l: dark_l {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smdark_l>, <&ldark_l>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        acute_n: acute_n {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smacute_n>, <&lacute_n>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        tilde_n: tilde_n {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smtil_n>, <&ltil_n>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        acute_s: acute_s {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smacute_s>, <&lacute_s>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        acute_z: acute_z {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smacute_z>, <&lacute_z>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_z: dot_z {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&smdot_z>, <&ldot_z>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Special Characters - Other

        lb_euro: lb_euro {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&uk_pnd>, <&euro>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Encoder

        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_inc>, <&rgb_dec>;
        };

        // Tap Dance

        cc: cc {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&rgb_ug RGB_COLOR_HSB(0,100,20)>,
                <&rgb_ug RGB_COLOR_HSB(10,100,20)>,
                <&rgb_ug RGB_COLOR_HSB(35,100,20)>,
                <&rgb_ug RGB_COLOR_HSB(120,100,20)>,
                <&rgb_ug RGB_COLOR_HSB(240,100,20)>,
                <&rgb_ug RGB_COLOR_HSB(285,100,20)>;
        };

        td_bt0: td_bt0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt BT_SEL 0>, <&ubt0>;
        };

        td_bt1: td_bt1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt BT_SEL 1>, <&ubt1>;
        };

        td_bt2: td_bt2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt BT_SEL 2>, <&ubt2>;
        };

        clcw: clcw {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp CLCK>, <&caps_word>;
        };

        lscw: lscw {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };

        rscw: rscw {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RSHFT>, <&caps_word>;
        };

        stm: stm {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&tm>;
        };

        pwr: pwr {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RSHFT>, <&slp>, <&rst>, <&off>;
        };

        td_btr: td_btr {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&bt BT_CLR>;
        };

        pscode: pscode {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F5>, <&kp F8>;
        };

        td_ll_l3: td_ll_l3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 3>, <&sl 3>;
        };

        td_rl_l3: td_rl_l3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&sl 3>;
        };

        td_sp_a: td_sp_a {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&fada_a>, <&ogonek_a>, <&umlaut_a>;
        };

        td_sp_e: td_sp_e {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&fada_e>, <&ogonek_e>;
        };

        td_sp_o: td_sp_o {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&fada_o>, <&umlaut_o>;
        };

        td_sp_u: td_sp_u {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&fada_u>, <&umlaut_u>;
        };

        td_sp_n: td_sp_n {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&acute_n>, <&tilde_n>;
        };

        td_sp_s: td_sp_s {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&acute_s>, <&essette_s>;
        };

        td_sp_z: td_sp_z {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&acute_z>, <&dot_z>;
        };

        td_lt: td_lt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LT>, <&dbl_left>;
        };

        td_gt: td_gt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp GT>, <&dbl_right>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                    |  6   |  7    |  8    |  9   |   0   | DEL   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                    |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // | CAPS  |  A  |  S  |  D   |  F   |  G   |                    |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |MUTE SPK|  |MUTE MIC|  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE  | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC       &kp N1  &kp N2     &kp N3        &kp N4        &kp N5                                &kp N6  &kp N7            &kp N8             &kp N9         &kp N0    &kp GRAVE
&kp TAB       &kp Q   &kp W      &kp E         &kp R         &kp T                                 &kp Y   &kp U             &kp I              &kp O          &kp P     &kp BACKSPACE
&kp LSHIFT    &kp A   &kp S      &kp D         &kp F         &kp G                                 &kp H   &kp J             &kp K              &kp L          &kp SEMI  &kp SQT
&kp LCTRL     &kp Z   &kp X      &kp C         &kp V         &kp B   &kp C_MUTE  &kp C_SPLAY_PAUSE  &kp N   &kp M             &kp COMMA          &kp DOT        &kp FSLH  &kp END 
                      &kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN  &mo 1   &kp SPACE   &kp ENTER         &mo 2   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOLUME_DOWN>,
                <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        raise_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |    F1 |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |       |  `  |  ~  |  <   |  >   |  ?   |                   |  *   |  {    |  }    | HOME |  END  |       |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  _   |  (    |  )    |  ;   |   |   | COLOR |
            // |       |  =  |  -  |  +   |  &   |  |   |  RGB   |  |       |  ^   |  [    |  ]    |  :   |   \   | POWER |
            //               |     |      |      |      |  CODE  |  |       |      |       |       |      |

            bindings = <
&kp F1  &kp F2     &kp F3     &kp F4    &kp F5    &kp F6                              &kp F7     &kp F8    &kp F9    &kp F10    &kp F11   &kp F12
&trans  &kp GRAVE  &kp TILDE  &none     &none     &kp QMARK                           &kp ASTRK  &kp LBRC  &kp RBRC  &kp HOME   &kp END   &trans
&none   &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT                           &kp UNDER  &kp LPAR  &kp RPAR  &kp SEMI   &kp PIPE  &cc
&trans  &kp EQUAL  &kp MINUS  &kp PLUS  &kp AMPS  &kp PIPE   &rgb_ug RGB_TOG  &trans  &kp CARET  &kp LBKT  &kp RBKT  &kp COLON  &kp BSLH  &none
                   &trans     &trans    &trans    &trans     &pscode          &trans  &trans     &trans    &trans    &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                | HUE+ |  =  |   /   |   *  |   -   | EFF+ |
            // |BRI+ | PSCR | INS  |   ↑   |   @   |   %  |                | HUE- |  7  |   8   |   9  |   +   | BKSP |
            // |BRI- | RGB  |  ←   |   ↓   |   →   |   $  |                | SAT+ |  4  |   5   |   6  |   +   | SPD+ |
            // |TASK |BT/USB|      |  PREV |  NEXT |   #  |PL/PS |  |      | SAT- |  1  |   2   |   3  | ENTER | SPD- |
            //              |      |       |       |      |      |  |      |  0   |  0  |   0   |   .  |

            bindings = <
&bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                            &rgb_ug RGB_HUI  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp KP_MINUS  &rgb_ug RGB_EFF
&bootloader      &kp PSCRN        &kp HOME      &kp UP        &kp AT        &kp PRCNT                               &rgb_ug RGB_HUD  &kp N7        &kp UP         &kp N9           &kp KP_PLUS   &trans
&rgb_ug RGB_BRD  &rgb_ug RGB_TOG  &kp LEFT      &kp DOWN      &kp RIGHT     &kp DLLR                                &rgb_ug RGB_SAI  &kp LEFT      &kp DOWN       &kp RIGHT        &kp KP_PLUS   &rgb_ug RGB_SPI
&stm             &out OUT_TOG     &none         &kp C_PREV    &kp C_NEXT    &kp HASH      &kp C_PLAY_PAUSE  &trans  &rgb_ug RGB_SAD  &kp N1        &kp N2         &kp N3           &kp KP_ENTER  &rgb_ug RGB_SPD
                                  &trans        &trans        &trans        &trans        &trans            &trans  &trans           &trans        &kp N0         &kp DOT
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        Gaming_Layer {
            bindings = <
&bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                       &none  &none  &none  &none   &none  &none
&bootloader        &kp T         &kp Q         &kp W         &kp E         &kp R                              &none  &none  &none  &none   &none  &none
&kp LEFT_ALT       &kp G         &kp A         &kp S         &kp D         &kp F                              &none  &none  &none  &none   &none  &none
&kp RIGHT_CONTROL  &kp B         &kp Z         &kp X         &kp C         &kp V         &kp C_MUTE  &none    &none  &none  &none  &none   &none  &none
                                 &trans        &trans        &trans        &trans        &kp SPACE   &kp RET  &none  &none  &none  &tog 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };
    };
};


&sensors {
    // Change this to your encoder's number of detents.
    // If you have multiple encoders with different detents, see
    // https://zmk.dev/docs/config/encoders#keymap-sensor-config
    triggers-per-rotation = <20>;
};